/*
 * This file is generated by jOOQ.
 */
package app.itetenosuke.infra.db.jooq.generated.tables.records;


import app.itetenosuke.infra.db.jooq.generated.tables.USERS_TABLE;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * ユーザーマスタ
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record10<Long, String, String, String, LocalDate, Short, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sukeroku.users.user_id</code>. ユーザid
     */
    public void setUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sukeroku.users.user_id</code>. ユーザid
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sukeroku.users.password</code>. パスワード
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sukeroku.users.password</code>. パスワード
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sukeroku.users.user_name</code>. ユーザ名
     */
    public void setUserName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sukeroku.users.user_name</code>. ユーザ名
     */
    public String getUserName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sukeroku.users.email</code>. Eメール
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sukeroku.users.email</code>. Eメール
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sukeroku.users.birthday</code>. birthday
     */
    public void setBirthday(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>sukeroku.users.birthday</code>. birthday
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>sukeroku.users.age</code>. age
     */
    public void setAge(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>sukeroku.users.age</code>. age
     */
    public Short getAge() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>sukeroku.users.role</code>. ロール
     */
    public void setRole(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>sukeroku.users.role</code>. ロール
     */
    public String getRole() {
        return (String) get(6);
    }

    /**
     * Setter for <code>sukeroku.users.status</code>. ユーザーステータス : 使用中ならALIVE, 削除済みならDELETED
     */
    public void setStatus(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>sukeroku.users.status</code>. ユーザーステータス : 使用中ならALIVE, 削除済みならDELETED
     */
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>sukeroku.users.created_at</code>. 登録日時
     */
    public void setCreatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>sukeroku.users.created_at</code>. 登録日時
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>sukeroku.users.updated_at</code>. 更新日時
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>sukeroku.users.updated_at</code>. 更新日時
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, String, LocalDate, Short, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, String, LocalDate, Short, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return USERS_TABLE.USERS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return USERS_TABLE.USERS.PASSWORD;
    }

    @Override
    public Field<String> field3() {
        return USERS_TABLE.USERS.USER_NAME;
    }

    @Override
    public Field<String> field4() {
        return USERS_TABLE.USERS.EMAIL;
    }

    @Override
    public Field<LocalDate> field5() {
        return USERS_TABLE.USERS.BIRTHDAY;
    }

    @Override
    public Field<Short> field6() {
        return USERS_TABLE.USERS.AGE;
    }

    @Override
    public Field<String> field7() {
        return USERS_TABLE.USERS.ROLE;
    }

    @Override
    public Field<String> field8() {
        return USERS_TABLE.USERS.STATUS;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return USERS_TABLE.USERS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return USERS_TABLE.USERS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public String component3() {
        return getUserName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public LocalDate component5() {
        return getBirthday();
    }

    @Override
    public Short component6() {
        return getAge();
    }

    @Override
    public String component7() {
        return getRole();
    }

    @Override
    public String component8() {
        return getStatus();
    }

    @Override
    public LocalDateTime component9() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component10() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public String value3() {
        return getUserName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public LocalDate value5() {
        return getBirthday();
    }

    @Override
    public Short value6() {
        return getAge();
    }

    @Override
    public String value7() {
        return getRole();
    }

    @Override
    public String value8() {
        return getStatus();
    }

    @Override
    public LocalDateTime value9() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value10() {
        return getUpdatedAt();
    }

    @Override
    public UsersRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value5(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public UsersRecord value6(Short value) {
        setAge(value);
        return this;
    }

    @Override
    public UsersRecord value7(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UsersRecord value8(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public UsersRecord value9(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value10(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, LocalDate value5, Short value6, String value7, String value8, LocalDateTime value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(USERS_TABLE.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long userId, String password, String userName, String email, LocalDate birthday, Short age, String role, String status, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(USERS_TABLE.USERS);

        setUserId(userId);
        setPassword(password);
        setUserName(userName);
        setEmail(email);
        setBirthday(birthday);
        setAge(age);
        setRole(role);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
