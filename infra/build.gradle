buildscript {
    repositories {
        maven {
            url = uri('https://plugins.gradle.org/m2/')
        }
    }
    dependencies {
        classpath('org.postgresql:postgresql:42.2.10')
        classpath('nu.studer:gradle-jooq-plugin:5.2')
        classpath('org.flywaydb:flyway-gradle-plugin:7.8.1')
    }
}

plugins {
	id 'java'
	id 'eclipse'
	id 'nu.studer.jooq' version '5.2'
	id 'org.flywaydb.flyway' version '6.5.6'
}

group = 'app.itetenosuke'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def jooqVersion = '3.14.4'

def dbUser = System.getenv()['DATABASE_USER']
def dbPassword = System.getenv()['DATABASE_PASSWORD']
def dbUrl = System.getenv()['DATABASE_URL']

def jooqTargetDirectory = 'src/main/java'
def jooqTargetPackageName = 'app.itetenosuke.infra.db.jooq.generated'



repositories {
    jcenter()
}

jar {
	enabled = true
}

dependencies {
	implementation 'org.jooq:jooq'
    jooqGenerator 'org.postgresql:postgresql:42.2.14'
}

flyway {
    url = dbUrl
    user = dbUser
    password = dbPassword
}

jooq {
    version = jooqVersion
    configurations {
    	main {
    		generationTool {
		        jdbc {
		            driver = 'org.postgresql.Driver'
				    url = dbUrl
				    user = dbUser
				    password = dbPassword
		        }
		        generator {
		            name = 'org.jooq.codegen.DefaultGenerator'
		            database {
		                name = 'org.jooq.meta.postgres.PostgresDatabase'
		                inputSchema = 'sukeroku'
		                includes = '.*'
		                excludes = 'flyway_schema_history'
		            }
		            target {
		                directory = jooqTargetDirectory
		                packageName = jooqTargetPackageName
		            }
		            strategy {
		                name = null
		                matchers {
		                    tables {
		                        table {
		                            tableClass {
		                                transform = 'UPPER'
		                                expression = '\$0_TABLE'
		                            }
		                        }
		                    }
		                }
		            }
		        }
	        }
    	}
    }
}
generateJooq.mustRunAfter "flywayMigrate"