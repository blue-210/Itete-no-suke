/*
 * This file is generated by jOOQ.
 */
package app.itetenosuke.infrastructure.jooq.generated.tables.records;


import app.itetenosuke.infrastructure.jooq.generated.tables.USERS_MEDICINE_TABLE;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * ユーザー_薬マスタ関連テーブル
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersMedicineRecord extends UpdatableRecordImpl<UsersMedicineRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sukeroku.users_medicine.fk_user_id</code>. ユーザid
     */
    public void setFkUserId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sukeroku.users_medicine.fk_user_id</code>. ユーザid
     */
    public Long getFkUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sukeroku.users_medicine.fk_medicine_id</code>. 薬ID
     */
    public void setFkMedicineId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>sukeroku.users_medicine.fk_medicine_id</code>. 薬ID
     */
    public Long getFkMedicineId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return USERS_MEDICINE_TABLE.USERS_MEDICINE.FK_USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return USERS_MEDICINE_TABLE.USERS_MEDICINE.FK_MEDICINE_ID;
    }

    @Override
    public Long component1() {
        return getFkUserId();
    }

    @Override
    public Long component2() {
        return getFkMedicineId();
    }

    @Override
    public Long value1() {
        return getFkUserId();
    }

    @Override
    public Long value2() {
        return getFkMedicineId();
    }

    @Override
    public UsersMedicineRecord value1(Long value) {
        setFkUserId(value);
        return this;
    }

    @Override
    public UsersMedicineRecord value2(Long value) {
        setFkMedicineId(value);
        return this;
    }

    @Override
    public UsersMedicineRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersMedicineRecord
     */
    public UsersMedicineRecord() {
        super(USERS_MEDICINE_TABLE.USERS_MEDICINE);
    }

    /**
     * Create a detached, initialised UsersMedicineRecord
     */
    public UsersMedicineRecord(Long fkUserId, Long fkMedicineId) {
        super(USERS_MEDICINE_TABLE.USERS_MEDICINE);

        setFkUserId(fkUserId);
        setFkMedicineId(fkMedicineId);
    }
}
