/*
 * This file is generated by jOOQ.
 */
package app.itetenosuke.infrastructure.jooq.generated.tables.records;


import app.itetenosuke.infrastructure.jooq.generated.tables.BODYPARTS_TABLE;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 部位マスタ
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BodypartsRecord extends UpdatableRecordImpl<BodypartsRecord> implements Record5<Long, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sukeroku.bodyparts.body_parts_id</code>. 部位ID
     */
    public void setBodyPartsId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sukeroku.bodyparts.body_parts_id</code>. 部位ID
     */
    public Long getBodyPartsId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sukeroku.bodyparts.body_parts_name</code>. 部位名
     */
    public void setBodyPartsName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sukeroku.bodyparts.body_parts_name</code>. 部位名
     */
    public String getBodyPartsName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sukeroku.bodyparts.status</code>. 部位ステータス : 使用中ならALIVE, 削除済みならDELETED
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sukeroku.bodyparts.status</code>. 部位ステータス : 使用中ならALIVE, 削除済みならDELETED
     */
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sukeroku.bodyparts.created_at</code>. 登録日
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>sukeroku.bodyparts.created_at</code>. 登録日
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>sukeroku.bodyparts.updated_at</code>. 更新日
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>sukeroku.bodyparts.updated_at</code>. 更新日
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BODYPARTS_TABLE.BODYPARTS.BODY_PARTS_ID;
    }

    @Override
    public Field<String> field2() {
        return BODYPARTS_TABLE.BODYPARTS.BODY_PARTS_NAME;
    }

    @Override
    public Field<String> field3() {
        return BODYPARTS_TABLE.BODYPARTS.STATUS;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return BODYPARTS_TABLE.BODYPARTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return BODYPARTS_TABLE.BODYPARTS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getBodyPartsId();
    }

    @Override
    public String component2() {
        return getBodyPartsName();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getBodyPartsId();
    }

    @Override
    public String value2() {
        return getBodyPartsName();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    @Override
    public BodypartsRecord value1(Long value) {
        setBodyPartsId(value);
        return this;
    }

    @Override
    public BodypartsRecord value2(String value) {
        setBodyPartsName(value);
        return this;
    }

    @Override
    public BodypartsRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public BodypartsRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BodypartsRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public BodypartsRecord values(Long value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BodypartsRecord
     */
    public BodypartsRecord() {
        super(BODYPARTS_TABLE.BODYPARTS);
    }

    /**
     * Create a detached, initialised BodypartsRecord
     */
    public BodypartsRecord(Long bodyPartsId, String bodyPartsName, String status, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(BODYPARTS_TABLE.BODYPARTS);

        setBodyPartsId(bodyPartsId);
        setBodyPartsName(bodyPartsName);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
