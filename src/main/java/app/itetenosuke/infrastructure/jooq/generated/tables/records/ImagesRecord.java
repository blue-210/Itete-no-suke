/*
 * This file is generated by jOOQ.
 */
package app.itetenosuke.infrastructure.jooq.generated.tables.records;


import app.itetenosuke.infrastructure.jooq.generated.tables.IMAGES_TABLE;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 新規テーブル
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImagesRecord extends UpdatableRecordImpl<ImagesRecord> implements Record4<Long, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sukeroku.images.images_id</code>. 部位画像ID
     */
    public void setImagesId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>sukeroku.images.images_id</code>. 部位画像ID
     */
    public Long getImagesId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>sukeroku.images.images_path</code>. 部位画像パス
     */
    public void setImagesPath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sukeroku.images.images_path</code>. 部位画像パス
     */
    public String getImagesPath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sukeroku.images.updated_at</code>. 更新日時
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>sukeroku.images.updated_at</code>. 更新日時
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>sukeroku.images.created_at</code>. 登録日時
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>sukeroku.images.created_at</code>. 登録日時
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return IMAGES_TABLE.IMAGES.IMAGES_ID;
    }

    @Override
    public Field<String> field2() {
        return IMAGES_TABLE.IMAGES.IMAGES_PATH;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return IMAGES_TABLE.IMAGES.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return IMAGES_TABLE.IMAGES.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getImagesId();
    }

    @Override
    public String component2() {
        return getImagesPath();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getImagesId();
    }

    @Override
    public String value2() {
        return getImagesPath();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public ImagesRecord value1(Long value) {
        setImagesId(value);
        return this;
    }

    @Override
    public ImagesRecord value2(String value) {
        setImagesPath(value);
        return this;
    }

    @Override
    public ImagesRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ImagesRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ImagesRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImagesRecord
     */
    public ImagesRecord() {
        super(IMAGES_TABLE.IMAGES);
    }

    /**
     * Create a detached, initialised ImagesRecord
     */
    public ImagesRecord(Long imagesId, String imagesPath, LocalDateTime updatedAt, LocalDateTime createdAt) {
        super(IMAGES_TABLE.IMAGES);

        setImagesId(imagesId);
        setImagesPath(imagesPath);
        setUpdatedAt(updatedAt);
        setCreatedAt(createdAt);
    }
}
